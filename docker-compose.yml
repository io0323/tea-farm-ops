version: '3.8'

services:
  # データベース
  postgres:
    image: postgres:15-alpine
    container_name: tea-farm-ops-db
    environment:
      POSTGRES_DB: teafarmops
      POSTGRES_USER: teafarmops
      POSTGRES_PASSWORD: teafarmops123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/main/resources/data.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U teafarmops"]
      interval: 10s
      timeout: 5s
      retries: 5

  # バックエンド
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: backend-builder
    container_name: tea-farm-ops-backend
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/teafarmops
      SPRING_DATASOURCE_USERNAME: teafarmops
      SPRING_DATASOURCE_PASSWORD: teafarmops123
      JWT_SECRET: your-secret-key-here
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend/src/main/resources/application-docker.properties:/app/application.properties
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # フロントエンド（開発用）
  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: tea-farm-ops-frontend-dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      REACT_APP_API_URL: http://localhost:8080
    depends_on:
      - backend

  # Nginx（本番用）
  nginx:
    image: nginx:alpine
    container_name: tea-farm-ops-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
    profiles:
      - production

volumes:
  postgres_data:

networks:
  default:
    name: tea-farm-ops-network 