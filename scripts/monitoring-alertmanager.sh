#!/bin/bash

# TeaFarmOps Áõ£Ë¶ñ„Ç∑„Çπ„ÉÜ„É†Âº∑Âåñ - Alertmanager„Ç¢„É©„Éº„ÉàÁÆ°ÁêÜ
# ‰ΩøÁî®ÊñπÊ≥ï: ./scripts/monitoring-alertmanager.sh [options]

set -e

# Ëâ≤‰ªò„ÅçÂá∫Âäõ
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# „É≠„Ç∞Èñ¢Êï∞
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Ë®≠ÂÆö
ALERTMANAGER_CONFIG="/etc/alertmanager/alertmanager.yml"
ALERTMANAGER_DATA="/var/lib/alertmanager"
ALERTMANAGER_LOG="/var/log/alertmanager"
ALERTMANAGER_USER="alertmanager"
ALERTMANAGER_VERSION="0.26.0"
LOG_FILE="/var/log/tea-farm-ops/monitoring/alertmanager.log"

# „Éò„É´„ÉóË°®Á§∫
show_help() {
    echo "TeaFarmOps Alertmanager„Ç¢„É©„Éº„ÉàÁÆ°ÁêÜ„Çπ„ÇØ„É™„Éó„Éà"
    echo ""
    echo "‰ΩøÁî®ÊñπÊ≥ï:"
    echo "  $0 [options]"
    echo ""
    echo "„Ç™„Éó„Ç∑„Éß„É≥:"
    echo "  -h, --help          „Åì„ÅÆ„Éò„É´„Éó„ÇíË°®Á§∫"
    echo "  -i, --install       Alertmanager„ÅÆ„Ç§„É≥„Çπ„Éà„Éº„É´"
    echo "  -c, --configure     Alertmanager„ÅÆË®≠ÂÆö"
    echo "  -s, --start         Alertmanager„Çµ„Éº„Éì„Çπ„ÅÆÈñãÂßã"
    echo "  -t, --test          „Ç¢„É©„Éº„Éà„ÅÆ„ÉÜ„Çπ„Éà"
    echo "  -m, --monitor       Áõ£Ë¶ñÁä∂ÊÖã„ÅÆÁ¢∫Ë™ç"
    echo "  -n, --notifications ÈÄöÁü•Ë®≠ÂÆö„ÅÆÁÆ°ÁêÜ"
    echo "  -v, --verbose       Ë©≥Á¥∞„É≠„Ç∞Âá∫Âäõ"
    echo ""
    echo "‰æã:"
    echo "  $0 --install         # Alertmanager„Ç§„É≥„Çπ„Éà„Éº„É´"
    echo "  $0 --configure       # AlertmanagerË®≠ÂÆö"
    echo "  $0 --test            # „Ç¢„É©„Éº„Éà„ÉÜ„Çπ„Éà"
}

# ÂºïÊï∞Ëß£Êûê
INSTALL=false
CONFIGURE=false
START=false
TEST=false
MONITOR=false
NOTIFICATIONS=false
VERBOSE=false

while [[ $# -gt 0 ]]; do
    case $1 in
        -h|--help)
            show_help
            exit 0
            ;;
        -i|--install)
            INSTALL=true
            shift
            ;;
        -c|--configure)
            CONFIGURE=true
            shift
            ;;
        -s|--start)
            START=true
            shift
            ;;
        -t|--test)
            TEST=true
            shift
            ;;
        -m|--monitor)
            MONITOR=true
            shift
            ;;
        -n|--notifications)
            NOTIFICATIONS=true
            shift
            ;;
        -v|--verbose)
            VERBOSE=true
            shift
            ;;
        *)
            log_error "‰∏çÊòé„Å™„Ç™„Éó„Ç∑„Éß„É≥: $1"
            show_help
            exit 1
            ;;
    esac
done

# „É≠„Ç∞„Éá„Ç£„É¨„ÇØ„Éà„É™„ÅÆ‰ΩúÊàê
setup_logging() {
    mkdir -p /var/log/tea-farm-ops/monitoring
    
    if [[ "$VERBOSE" == "true" ]]; then
        exec 1> >(tee -a "$LOG_FILE")
        exec 2>&1
    else
        exec 1> >(tee -a "$LOG_FILE" >/dev/null)
        exec 2>&1
    fi
}

# Alertmanager„ÅÆ„Ç§„É≥„Çπ„Éà„Éº„É´
install_alertmanager() {
    log_info "Alertmanager„Çí„Ç§„É≥„Çπ„Éà„Éº„É´‰∏≠..."
    
    if command -v alertmanager >/dev/null 2>&1; then
        log_success "Alertmanager„ÅØÊó¢„Å´„Ç§„É≥„Çπ„Éà„Éº„É´„Åï„Çå„Å¶„ÅÑ„Åæ„Åô"
        return 0
    fi
    
    # „É¶„Éº„Ç∂„Éº„ÅÆ‰ΩúÊàê
    if ! id "$ALERTMANAGER_USER" &>/dev/null; then
        sudo useradd --no-create-home --shell /bin/false "$ALERTMANAGER_USER"
        log_success "Alertmanager„É¶„Éº„Ç∂„Éº„Åå‰ΩúÊàê„Åï„Çå„Åæ„Åó„Åü"
    fi
    
    # „Éá„Ç£„É¨„ÇØ„Éà„É™„ÅÆ‰ΩúÊàê
    sudo mkdir -p "$ALERTMANAGER_DATA"
    sudo mkdir -p "$ALERTMANAGER_LOG"
    sudo mkdir -p /etc/alertmanager
    sudo mkdir -p /etc/alertmanager/templates
    
    # Ê®©Èôê„ÅÆË®≠ÂÆö
    sudo chown "$ALERTMANAGER_USER:$ALERTMANAGER_USER" "$ALERTMANAGER_DATA"
    sudo chown "$ALERTMANAGER_USER:$ALERTMANAGER_USER" "$ALERTMANAGER_LOG"
    sudo chown "$ALERTMANAGER_USER:$ALERTMANAGER_USER" /etc/alertmanager
    
    # Alertmanager„ÅÆ„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ„Å®„Ç§„É≥„Çπ„Éà„Éº„É´
    local download_url="https://github.com/prometheus/alertmanager/releases/download/v${ALERTMANAGER_VERSION}/alertmanager-${ALERTMANAGER_VERSION}.linux-amd64.tar.gz"
    local temp_dir="/tmp/alertmanager_install"
    
    mkdir -p "$temp_dir"
    cd "$temp_dir"
    
    log_info "Alertmanager v${ALERTMANAGER_VERSION}„Çí„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ‰∏≠..."
    wget -q "$download_url" -O alertmanager.tar.gz
    
    tar -xzf alertmanager.tar.gz
    cd "alertmanager-${ALERTMANAGER_VERSION}.linux-amd64"
    
    # „Éê„Ç§„Éä„É™„ÅÆ„Ç≥„Éî„Éº
    sudo cp alertmanager /usr/local/bin/
    sudo cp amtool /usr/local/bin/
    
    # Ë®≠ÂÆö„Éï„Ç°„Ç§„É´„ÅÆ„Ç≥„Éî„Éº
    sudo cp alertmanager.yml /etc/alertmanager/
    
    # Ê®©Èôê„ÅÆË®≠ÂÆö
    sudo chown "$ALERTMANAGER_USER:$ALERTMANAGER_USER" /usr/local/bin/alertmanager
    sudo chown "$ALERTMANAGER_USER:$ALERTMANAGER_USER" /usr/local/bin/amtool
    sudo chown "$ALERTMANAGER_USER:$ALERTMANAGER_USER" /etc/alertmanager/alertmanager.yml
    
    # „ÇØ„É™„Éº„É≥„Ç¢„ÉÉ„Éó
    cd /
    rm -rf "$temp_dir"
    
    log_success "Alertmanager„Åå„Ç§„É≥„Çπ„Éà„Éº„É´„Åï„Çå„Åæ„Åó„Åü"
}

# Alertmanager„ÅÆË®≠ÂÆö
configure_alertmanager() {
    log_info "Alertmanager„ÇíË®≠ÂÆö‰∏≠..."
    
    # Ë®≠ÂÆö„Éï„Ç°„Ç§„É´„ÅÆ„Éê„ÉÉ„ÇØ„Ç¢„ÉÉ„Éó
    if [[ -f "$ALERTMANAGER_CONFIG" ]]; then
        sudo cp "$ALERTMANAGER_CONFIG" "${ALERTMANAGER_CONFIG}.backup.$(date +%Y%m%d_%H%M%S)"
    fi
    
    # AlertmanagerË®≠ÂÆö„Éï„Ç°„Ç§„É´„ÅÆ‰ΩúÊàê
    sudo tee "$ALERTMANAGER_CONFIG" > /dev/null << EOF
# TeaFarmOps AlertmanagerË®≠ÂÆö

global:
  resolve_timeout: 5m
  smtp_smarthost: 'localhost:587'
  smtp_from: 'alertmanager@teafarmops.local'
  smtp_auth_username: 'alertmanager@teafarmops.local'
  smtp_auth_password: 'teafarmops_alert_2024'
  smtp_require_tls: false

# „ÉÜ„É≥„Éó„É¨„Éº„Éà„Éï„Ç°„Ç§„É´„ÅÆË®≠ÂÆö
templates:
  - '/etc/alertmanager/templates/*.tmpl'

# „É´„Éº„ÉàË®≠ÂÆö
route:
  group_by: ['alertname', 'cluster', 'service']
  group_wait: 30s
  group_interval: 5m
  repeat_interval: 4h
  receiver: 'tea-farm-ops-team'
  routes:
    - match:
        severity: critical
      receiver: 'tea-farm-ops-critical'
      continue: true
    - match:
        severity: warning
      receiver: 'tea-farm-ops-warning'
      continue: true
    - match:
        service: database
      receiver: 'tea-farm-ops-database'
      continue: true
    - match:
        service: cache
      receiver: 'tea-farm-ops-cache'
      continue: true
    - match:
        service: webserver
      receiver: 'tea-farm-ops-webserver'
      continue: true

# Âèó‰ø°ËÄÖË®≠ÂÆö
receivers:
  - name: 'tea-farm-ops-team'
    email_configs:
      - to: 'team@teafarmops.local'
        send_resolved: true
        headers:
          subject: 'TeaFarmOps Alert: {{ .GroupLabels.alertname }}'
        html: |
          <h2>TeaFarmOps Alert</h2>
          <p><strong>Alert:</strong> {{ .GroupLabels.alertname }}</p>
          <p><strong>Severity:</strong> {{ .GroupLabels.severity }}</p>
          <p><strong>Service:</strong> {{ .GroupLabels.service }}</p>
          <p><strong>Summary:</strong> {{ .CommonAnnotations.summary }}</p>
          <p><strong>Description:</strong> {{ .CommonAnnotations.description }}</p>
          <p><strong>Started:</strong> {{ .StartsAt }}</p>
          {{ if .EndsAt }}<p><strong>Ended:</strong> {{ .EndsAt }}</p>{{ end }}
          <hr>
          <p><small>TeaFarmOps Monitoring System</small></p>
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR_SLACK_WEBHOOK'
        channel: '#tea-farm-ops-alerts'
        title: 'TeaFarmOps Alert: {{ .GroupLabels.alertname }}'
        text: |
          *Alert:* {{ .GroupLabels.alertname }}
          *Severity:* {{ .GroupLabels.severity }}
          *Service:* {{ .GroupLabels.service }}
          *Summary:* {{ .CommonAnnotations.summary }}
          *Description:* {{ .CommonAnnotations.description }}
          *Started:* {{ .StartsAt }}
          {{ if .EndsAt }}*Ended:* {{ .EndsAt }}{{ end }}
        send_resolved: true

  - name: 'tea-farm-ops-critical'
    email_configs:
      - to: 'critical@teafarmops.local'
        send_resolved: true
        headers:
          subject: 'üö® CRITICAL: TeaFarmOps Alert - {{ .GroupLabels.alertname }}'
        html: |
          <h2 style="color: red;">üö® CRITICAL ALERT</h2>
          <p><strong>Alert:</strong> {{ .GroupLabels.alertname }}</p>
          <p><strong>Severity:</strong> {{ .GroupLabels.severity }}</p>
          <p><strong>Service:</strong> {{ .GroupLabels.service }}</p>
          <p><strong>Summary:</strong> {{ .CommonAnnotations.summary }}</p>
          <p><strong>Description:</strong> {{ .CommonAnnotations.description }}</p>
          <p><strong>Started:</strong> {{ .StartsAt }}</p>
          {{ if .EndsAt }}<p><strong>Ended:</strong> {{ .EndsAt }}</p>{{ end }}
          <hr>
          <p><small>TeaFarmOps Monitoring System - IMMEDIATE ACTION REQUIRED</small></p>
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR_SLACK_WEBHOOK'
        channel: '#tea-farm-ops-critical'
        title: 'üö® CRITICAL: TeaFarmOps Alert - {{ .GroupLabels.alertname }}'
        text: |
          üö® *CRITICAL ALERT*
          *Alert:* {{ .GroupLabels.alertname }}
          *Severity:* {{ .GroupLabels.severity }}
          *Service:* {{ .GroupLabels.service }}
          *Summary:* {{ .CommonAnnotations.summary }}
          *Description:* {{ .CommonAnnotations.description }}
          *Started:* {{ .StartsAt }}
          {{ if .EndsAt }}*Ended:* {{ .EndsAt }}{{ end }}
          *IMMEDIATE ACTION REQUIRED*
        send_resolved: true

  - name: 'tea-farm-ops-warning'
    email_configs:
      - to: 'warnings@teafarmops.local'
        send_resolved: true
        headers:
          subject: '‚ö†Ô∏è WARNING: TeaFarmOps Alert - {{ .GroupLabels.alertname }}'
        html: |
          <h2 style="color: orange;">‚ö†Ô∏è WARNING ALERT</h2>
          <p><strong>Alert:</strong> {{ .GroupLabels.alertname }}</p>
          <p><strong>Severity:</strong> {{ .GroupLabels.severity }}</p>
          <p><strong>Service:</strong> {{ .GroupLabels.service }}</p>
          <p><strong>Summary:</strong> {{ .CommonAnnotations.summary }}</p>
          <p><strong>Description:</strong> {{ .CommonAnnotations.description }}</p>
          <p><strong>Started:</strong> {{ .StartsAt }}</p>
          {{ if .EndsAt }}<p><strong>Ended:</strong> {{ .EndsAt }}</p>{{ end }}
          <hr>
          <p><small>TeaFarmOps Monitoring System</small></p>
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR_SLACK_WEBHOOK'
        channel: '#tea-farm-ops-warnings'
        title: '‚ö†Ô∏è WARNING: TeaFarmOps Alert - {{ .GroupLabels.alertname }}'
        text: |
          ‚ö†Ô∏è *WARNING ALERT*
          *Alert:* {{ .GroupLabels.alertname }}
          *Severity:* {{ .GroupLabels.severity }}
          *Service:* {{ .GroupLabels.service }}
          *Summary:* {{ .CommonAnnotations.summary }}
          *Description:* {{ .CommonAnnotations.description }}
          *Started:* {{ .StartsAt }}
          {{ if .EndsAt }}*Ended:* {{ .EndsAt }}{{ end }}
        send_resolved: true

  - name: 'tea-farm-ops-database'
    email_configs:
      - to: 'database@teafarmops.local'
        send_resolved: true
        headers:
          subject: 'üóÑÔ∏è DATABASE: TeaFarmOps Alert - {{ .GroupLabels.alertname }}'
        html: |
          <h2 style="color: blue;">üóÑÔ∏è DATABASE ALERT</h2>
          <p><strong>Alert:</strong> {{ .GroupLabels.alertname }}</p>
          <p><strong>Severity:</strong> {{ .GroupLabels.severity }}</p>
          <p><strong>Service:</strong> {{ .GroupLabels.service }}</p>
          <p><strong>Summary:</strong> {{ .CommonAnnotations.summary }}</p>
          <p><strong>Description:</strong> {{ .CommonAnnotations.description }}</p>
          <p><strong>Started:</strong> {{ .StartsAt }}</p>
          {{ if .EndsAt }}<p><strong>Ended:</strong> {{ .EndsAt }}</p>{{ end }}
          <hr>
          <p><small>TeaFarmOps Database Monitoring</small></p>
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR_SLACK_WEBHOOK'
        channel: '#tea-farm-ops-database'
        title: 'üóÑÔ∏è DATABASE: TeaFarmOps Alert - {{ .GroupLabels.alertname }}'
        text: |
          üóÑÔ∏è *DATABASE ALERT*
          *Alert:* {{ .GroupLabels.alertname }}
          *Severity:* {{ .GroupLabels.severity }}
          *Service:* {{ .GroupLabels.service }}
          *Summary:* {{ .CommonAnnotations.summary }}
          *Description:* {{ .CommonAnnotations.description }}
          *Started:* {{ .StartsAt }}
          {{ if .EndsAt }}*Ended:* {{ .EndsAt }}{{ end }}
        send_resolved: true

  - name: 'tea-farm-ops-cache'
    email_configs:
      - to: 'cache@teafarmops.local'
        send_resolved: true
        headers:
          subject: 'üî• CACHE: TeaFarmOps Alert - {{ .GroupLabels.alertname }}'
        html: |
          <h2 style="color: red;">üî• CACHE ALERT</h2>
          <p><strong>Alert:</strong> {{ .GroupLabels.alertname }}</p>
          <p><strong>Severity:</strong> {{ .GroupLabels.severity }}</p>
          <p><strong>Service:</strong> {{ .GroupLabels.service }}</p>
          <p><strong>Summary:</strong> {{ .CommonAnnotations.summary }}</p>
          <p><strong>Description:</strong> {{ .CommonAnnotations.description }}</p>
          <p><strong>Started:</strong> {{ .StartsAt }}</p>
          {{ if .EndsAt }}<p><strong>Ended:</strong> {{ .EndsAt }}</p>{{ end }}
          <hr>
          <p><small>TeaFarmOps Cache Monitoring</small></p>
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR_SLACK_WEBHOOK'
        channel: '#tea-farm-ops-cache'
        title: 'üî• CACHE: TeaFarmOps Alert - {{ .GroupLabels.alertname }}'
        text: |
          üî• *CACHE ALERT*
          *Alert:* {{ .GroupLabels.alertname }}
          *Severity:* {{ .GroupLabels.severity }}
          *Service:* {{ .GroupLabels.service }}
          *Summary:* {{ .CommonAnnotations.summary }}
          *Description:* {{ .CommonAnnotations.description }}
          *Started:* {{ .StartsAt }}
          {{ if .EndsAt }}*Ended:* {{ .EndsAt }}{{ end }}
        send_resolved: true

  - name: 'tea-farm-ops-webserver'
    email_configs:
      - to: 'webserver@teafarmops.local'
        send_resolved: true
        headers:
          subject: 'üåê WEBSERVER: TeaFarmOps Alert - {{ .GroupLabels.alertname }}'
        html: |
          <h2 style="color: green;">üåê WEBSERVER ALERT</h2>
          <p><strong>Alert:</strong> {{ .GroupLabels.alertname }}</p>
          <p><strong>Severity:</strong> {{ .GroupLabels.severity }}</p>
          <p><strong>Service:</strong> {{ .GroupLabels.service }}</p>
          <p><strong>Summary:</strong> {{ .CommonAnnotations.summary }}</p>
          <p><strong>Description:</strong> {{ .CommonAnnotations.description }}</p>
          <p><strong>Started:</strong> {{ .StartsAt }}</p>
          {{ if .EndsAt }}<p><strong>Ended:</strong> {{ .EndsAt }}</p>{{ end }}
          <hr>
          <p><small>TeaFarmOps Web Server Monitoring</small></p>
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR_SLACK_WEBHOOK'
        channel: '#tea-farm-ops-webserver'
        title: 'üåê WEBSERVER: TeaFarmOps Alert - {{ .GroupLabels.alertname }}'
        text: |
          üåê *WEBSERVER ALERT*
          *Alert:* {{ .GroupLabels.alertname }}
          *Severity:* {{ .GroupLabels.severity }}
          *Service:* {{ .GroupLabels.service }}
          *Summary:* {{ .CommonAnnotations.summary }}
          *Description:* {{ .CommonAnnotations.description }}
          *Started:* {{ .StartsAt }}
          {{ if .EndsAt }}*Ended:* {{ .EndsAt }}{{ end }}
        send_resolved: true

# ÊäëÂà∂Ë®≠ÂÆö
inhibit_rules:
  # Âêå„Åò„Ç§„É≥„Çπ„Çø„É≥„Çπ„ÅÆË§áÊï∞„ÅÆ„Ç¢„É©„Éº„Éà„ÇíÊäëÂà∂
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'dev', 'instance']
  
  # „Éá„Éº„Çø„Éô„Éº„Çπ„ÉÄ„Ç¶„É≥ÊôÇ„ÅØÈñ¢ÈÄ£„Ç¢„É©„Éº„Éà„ÇíÊäëÂà∂
  - source_match:
      alertname: 'DatabaseDown'
    target_match:
      service: 'database'
    equal: ['instance']
  
  # „Ç≠„É£„ÉÉ„Ç∑„É•„ÉÄ„Ç¶„É≥ÊôÇ„ÅØÈñ¢ÈÄ£„Ç¢„É©„Éº„Éà„ÇíÊäëÂà∂
  - source_match:
      alertname: 'CacheDown'
    target_match:
      service: 'cache'
    equal: ['instance']
  
  # Web„Çµ„Éº„Éê„Éº„ÉÄ„Ç¶„É≥ÊôÇ„ÅØÈñ¢ÈÄ£„Ç¢„É©„Éº„Éà„ÇíÊäëÂà∂
  - source_match:
      alertname: 'WebServerDown'
    target_match:
      service: 'webserver'
    equal: ['instance']

# ÊôÇÈñìË®≠ÂÆö
time_intervals:
  - name: workdays
    time_intervals:
      - weekdays: ['monday:friday']
        times:
          - start_time: 09:00
            end_time: 17:00
  - name: weekends
    time_intervals:
      - weekdays: ['saturday', 'sunday']
  - name: nights
    time_intervals:
      - times:
          - start_time: 22:00
            end_time: 06:00
        weekdays: ['monday:sunday']

# ÈÄöÁü•Ë®≠ÂÆö
notification_configs:
  - name: 'tea-farm-ops-team'
    email_configs:
      - to: 'team@teafarmops.local'
        send_resolved: true
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR_SLACK_WEBHOOK'
        channel: '#tea-farm-ops-alerts'
        send_resolved: true
EOF
    
    # Ê®©Èôê„ÅÆË®≠ÂÆö
    sudo chown "$ALERTMANAGER_USER:$ALERTMANAGER_USER" "$ALERTMANAGER_CONFIG"
    
    log_success "AlertmanagerË®≠ÂÆö„ÅåÂÆå‰∫Ü„Åó„Åæ„Åó„Åü"
}

# ÈÄöÁü•Ë®≠ÂÆö„ÅÆÁÆ°ÁêÜ
configure_notifications() {
    log_info "ÈÄöÁü•Ë®≠ÂÆö„ÇíÁÆ°ÁêÜ‰∏≠..."
    
    # „É°„Éº„É´ÈÄöÁü•Ë®≠ÂÆö
    log_info "„É°„Éº„É´ÈÄöÁü•Ë®≠ÂÆö„ÇíÁ¢∫Ë™ç‰∏≠..."
    
    # Postfix„ÅÆË®≠ÂÆöÁ¢∫Ë™ç
    if command -v postfix >/dev/null 2>&1; then
        log_success "Postfix„Åå„Ç§„É≥„Çπ„Éà„Éº„É´„Åï„Çå„Å¶„ÅÑ„Åæ„Åô"
        
        # PostfixË®≠ÂÆö„ÅÆÁ¢∫Ë™ç
        if sudo systemctl is-active --quiet postfix; then
            log_success "Postfix„Çµ„Éº„Éì„Çπ„ÅåÁ®ºÂÉç‰∏≠„Åß„Åô"
        else
            log_warning "Postfix„Çµ„Éº„Éì„Çπ„ÅåÂÅúÊ≠¢‰∏≠„Åß„Åô„ÄÇÈñãÂßã„Åó„Åæ„Åô„ÅãÔºü"
            read -p "Postfix„ÇíÈñãÂßã„Åó„Åæ„Åô„ÅãÔºü (y/n): " -n 1 -r
            echo
            if [[ $REPLY =~ ^[Yy]$ ]]; then
                sudo systemctl start postfix
                sudo systemctl enable postfix
                log_success "Postfix„ÅåÈñãÂßã„Åï„Çå„Åæ„Åó„Åü"
            fi
        fi
    else
        log_warning "Postfix„Åå„Ç§„É≥„Çπ„Éà„Éº„É´„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì"
        read -p "Postfix„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Åæ„Åô„ÅãÔºü (y/n): " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            sudo apt-get update
            sudo apt-get install -y postfix
            log_success "Postfix„Åå„Ç§„É≥„Çπ„Éà„Éº„É´„Åï„Çå„Åæ„Åó„Åü"
        fi
    fi
    
    # SlackÈÄöÁü•Ë®≠ÂÆö
    log_info "SlackÈÄöÁü•Ë®≠ÂÆö„ÇíÁ¢∫Ë™ç‰∏≠..."
    
    echo ""
    echo "=== SlackÈÄöÁü•Ë®≠ÂÆö ==="
    echo "SlackÈÄöÁü•„ÇíÊúâÂäπ„Å´„Åô„Çã„Å´„ÅØ„ÄÅ‰ª•‰∏ã„ÅÆÊâãÈ†Ü„ÇíÂÆüË°å„Åó„Å¶„Åè„Å†„Åï„ÅÑÔºö"
    echo ""
    echo "1. Slack„ÉØ„Éº„ÇØ„Çπ„Éö„Éº„Çπ„Åß„Ç¢„Éó„É™„Çí‰ΩúÊàê"
    echo "2. Incoming Webhooks„ÇíÊúâÂäπÂåñ"
    echo "3. Webhook URL„ÇíÂèñÂæó"
    echo "4. Ë®≠ÂÆö„Éï„Ç°„Ç§„É´„ÅÆ 'YOUR_SLACK_WEBHOOK' „ÇíÂÆüÈöõ„ÅÆURL„Å´ÁΩÆÊèõ"
    echo ""
    echo "ÁèæÂú®„ÅÆË®≠ÂÆö„Éï„Ç°„Ç§„É´: $ALERTMANAGER_CONFIG"
    echo ""
    
    # Webhook URL„ÅÆÂÖ•Âäõ
    read -p "Slack Webhook URL„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑÔºà„Çπ„Ç≠„ÉÉ„Éó„Åô„ÇãÂ†¥Âêà„ÅØEnterÔºâ: " slack_webhook
    if [[ -n "$slack_webhook" ]]; then
        # Ë®≠ÂÆö„Éï„Ç°„Ç§„É´„ÅÆÊõ¥Êñ∞
        sudo sed -i "s|YOUR_SLACK_WEBHOOK|$slack_webhook|g" "$ALERTMANAGER_CONFIG"
        log_success "Slack Webhook URL„ÅåË®≠ÂÆö„Åï„Çå„Åæ„Åó„Åü"
    else
        log_warning "SlackÈÄöÁü•„ÅØË®≠ÂÆö„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì"
    fi
    
    # „É°„Éº„É´„Ç¢„Éâ„É¨„Çπ„ÅÆË®≠ÂÆö
    echo ""
    echo "=== „É°„Éº„É´ÈÄöÁü•Ë®≠ÂÆö ==="
    read -p "„ÉÅ„Éº„É†ÈÄöÁü•Áî®„É°„Éº„É´„Ç¢„Éâ„É¨„Çπ„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ: " team_email
    if [[ -n "$team_email" ]]; then
        sudo sed -i "s|team@teafarmops.local|$team_email|g" "$ALERTMANAGER_CONFIG"
        log_success "„ÉÅ„Éº„É†ÈÄöÁü•„É°„Éº„É´„ÅåË®≠ÂÆö„Åï„Çå„Åæ„Åó„Åü: $team_email"
    fi
    
    read -p "„ÇØ„É™„ÉÜ„Ç£„Ç´„É´„Ç¢„É©„Éº„ÉàÁî®„É°„Éº„É´„Ç¢„Éâ„É¨„Çπ„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ: " critical_email
    if [[ -n "$critical_email" ]]; then
        sudo sed -i "s|critical@teafarmops.local|$critical_email|g" "$ALERTMANAGER_CONFIG"
        log_success "„ÇØ„É™„ÉÜ„Ç£„Ç´„É´ÈÄöÁü•„É°„Éº„É´„ÅåË®≠ÂÆö„Åï„Çå„Åæ„Åó„Åü: $critical_email"
    fi
    
    log_success "ÈÄöÁü•Ë®≠ÂÆö„ÅåÂÆå‰∫Ü„Åó„Åæ„Åó„Åü"
}

# systemd„Çµ„Éº„Éì„Çπ„ÅÆ‰ΩúÊàê
create_systemd_service() {
    log_info "systemd„Çµ„Éº„Éì„Çπ„Çí‰ΩúÊàê‰∏≠..."
    
    sudo tee /etc/systemd/system/alertmanager.service > /dev/null << EOF
[Unit]
Description=Alertmanager
Wants=network-online.target
After=network-online.target

[Service]
User=$ALERTMANAGER_USER
Group=$ALERTMANAGER_USER
Type=simple
ExecStart=/usr/local/bin/alertmanager \\
    --config.file=/etc/alertmanager/alertmanager.yml \\
    --storage.path=$ALERTMANAGER_DATA \\
    --data.retention=120h \\
    --web.listen-address=0.0.0.0:9093 \\
    --web.external-url=http://localhost:9093 \\
    --log.level=info \\
    --log.format=json

Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target
EOF
    
    # systemd„ÅÆÂÜçË™≠„ÅøËæº„Åø
    sudo systemctl daemon-reload
    sudo systemctl enable alertmanager
    
    log_success "systemd„Çµ„Éº„Éì„Çπ„Åå‰ΩúÊàê„Åï„Çå„Åæ„Åó„Åü"
}

# Alertmanager„Çµ„Éº„Éì„Çπ„ÅÆÈñãÂßã
start_alertmanager() {
    log_info "Alertmanager„Çµ„Éº„Éì„Çπ„ÇíÈñãÂßã‰∏≠..."
    
    # Ë®≠ÂÆö„Éï„Ç°„Ç§„É´„ÅÆÊ§úË®º
    if /usr/local/bin/amtool check-config "$ALERTMANAGER_CONFIG"; then
        log_success "AlertmanagerË®≠ÂÆö„Éï„Ç°„Ç§„É´„ÅÆÊ§úË®º„ÅåÊàêÂäü„Åó„Åæ„Åó„Åü"
    else
        log_error "AlertmanagerË®≠ÂÆö„Éï„Ç°„Ç§„É´„ÅÆÊ§úË®º„Å´Â§±Êïó„Åó„Åæ„Åó„Åü"
        return 1
    fi
    
    # „Çµ„Éº„Éì„Çπ„ÅÆÈñãÂßã
    sudo systemctl start alertmanager
    
    # „Çµ„Éº„Éì„Çπ„ÅÆÁä∂ÊÖãÁ¢∫Ë™ç
    if sudo systemctl is-active --quiet alertmanager; then
        log_success "Alertmanager„Çµ„Éº„Éì„Çπ„ÅåÈñãÂßã„Åï„Çå„Åæ„Åó„Åü"
    else
        log_error "Alertmanager„Çµ„Éº„Éì„Çπ„ÅÆÈñãÂßã„Å´Â§±Êïó„Åó„Åæ„Åó„Åü"
        return 1
    fi
    
    # Ëµ∑ÂãïÂæÖÊ©ü
    log_info "Alertmanager„ÅÆËµ∑Âãï„ÇíÂæÖÊ©ü‰∏≠..."
    sleep 10
    
    log_success "Alertmanager„ÅåÈñãÂßã„Åï„Çå„Åæ„Åó„Åü"
}

# „Ç¢„É©„Éº„Éà„ÅÆ„ÉÜ„Çπ„Éà
test_alerts() {
    log_info "„Ç¢„É©„Éº„Éà„Çí„ÉÜ„Çπ„Éà‰∏≠..."
    
    echo ""
    echo "=== AlertmanagerÊé•Á∂ö„ÉÜ„Çπ„Éà ==="
    
    # AlertmanagerÊé•Á∂ö„ÉÜ„Çπ„Éà
    if curl -s http://localhost:9093/api/v1/status | grep -q "status"; then
        log_success "Alertmanager APIÊé•Á∂ö„ÅåÊàêÂäü„Åó„Åæ„Åó„Åü"
    else
        log_error "Alertmanager APIÊé•Á∂ö„Å´Â§±Êïó„Åó„Åæ„Åó„Åü"
    fi
    
    echo ""
    echo "=== „ÉÜ„Çπ„Éà„Ç¢„É©„Éº„Éà„ÅÆÈÄÅ‰ø° ==="
    
    # „ÉÜ„Çπ„Éà„Ç¢„É©„Éº„Éà„ÅÆÈÄÅ‰ø°
    local test_alert='{
        "status": "firing",
        "alerts": [
            {
                "status": "firing",
                "labels": {
                    "alertname": "TestAlert",
                    "severity": "warning",
                    "service": "test",
                    "instance": "localhost:9090"
                },
                "annotations": {
                    "summary": "Test alert for TeaFarmOps",
                    "description": "This is a test alert to verify Alertmanager configuration"
                },
                "startsAt": "'$(date -u +%Y-%m-%dT%H:%M:%S.000Z)'",
                "endsAt": "'$(date -u -d '+5 minutes' +%Y-%m-%dT%H:%M:%S.000Z)'",
                "generatorURL": "http://localhost:9090/graph?g0.expr=up"
            }
        ]
    }'
    
    local response=$(curl -s -X POST http://localhost:9093/api/v1/alerts -H "Content-Type: application/json" -d "$test_alert")
    
    if echo "$response" | grep -q "success"; then
        log_success "„ÉÜ„Çπ„Éà„Ç¢„É©„Éº„Éà„ÅåÈÄÅ‰ø°„Åï„Çå„Åæ„Åó„Åü"
    else
        log_error "„ÉÜ„Çπ„Éà„Ç¢„É©„Éº„Éà„ÅÆÈÄÅ‰ø°„Å´Â§±Êïó„Åó„Åæ„Åó„Åü"
        echo "„É¨„Çπ„Éù„É≥„Çπ: $response"
    fi
    
    echo ""
    echo "=== „Ç¢„É©„Éº„ÉàÁä∂ÊÖã„ÅÆÁ¢∫Ë™ç ==="
    
    # „Ç¢„É©„Éº„ÉàÁä∂ÊÖã„ÅÆÁ¢∫Ë™ç
    local alerts=$(curl -s http://localhost:9093/api/v1/alerts | jq '.data.alerts | length' 2>/dev/null || echo "0")
    echo "„Ç¢„ÇØ„ÉÜ„Ç£„Éñ„Ç¢„É©„Éº„ÉàÊï∞: $alerts"
    
    # „Ç¢„É©„Éº„ÉàË©≥Á¥∞„ÅÆË°®Á§∫
    if [[ $alerts -gt 0 ]]; then
        echo ""
        echo "„Ç¢„É©„Éº„ÉàË©≥Á¥∞:"
        curl -s http://localhost:9093/api/v1/alerts | jq '.data.alerts[] | {alertname: .labels.alertname, severity: .labels.severity, status: .status}' 2>/dev/null || echo "„Ç¢„É©„Éº„ÉàË©≥Á¥∞„ÇíÂèñÂæó„Åß„Åç„Åæ„Åõ„Çì„Åß„Åó„Åü"
    fi
    
    log_success "„Ç¢„É©„Éº„Éà„ÅÆ„ÉÜ„Çπ„Éà„ÅåÂÆå‰∫Ü„Åó„Åæ„Åó„Åü"
}

# Áõ£Ë¶ñÁä∂ÊÖã„ÅÆÁ¢∫Ë™ç
monitor_status() {
    log_info "AlertmanagerÁõ£Ë¶ñÁä∂ÊÖã„ÇíÁ¢∫Ë™ç‰∏≠..."
    
    echo ""
    echo "=== Alertmanager„Çµ„Éº„Éì„ÇπÁä∂ÊÖã ==="
    
    if sudo systemctl is-active --quiet alertmanager; then
        echo "‚úÖ Alertmanager: Á®ºÂÉç‰∏≠"
    else
        echo "‚ùå Alertmanager: ÂÅúÊ≠¢‰∏≠"
    fi
    
    echo ""
    echo "=== „Éù„Éº„ÉàÁõ£Ë¶ñ ==="
    
    if ss -tuln | grep -q ":9093 "; then
        echo "‚úÖ „Éù„Éº„Éà 9093: Èñã„ÅÑ„Å¶„ÅÑ„Çã"
    else
        echo "‚ùå „Éù„Éº„Éà 9093: Èñâ„Åò„Å¶„ÅÑ„Çã"
    fi
    
    echo ""
    echo "=== AlertmanagerÁµ±Ë®à ==="
    
    # AlertmanagerÁµ±Ë®à
    local version=$(curl -s http://localhost:9093/api/v1/status | jq -r '.versionInfo.version' 2>/dev/null || echo "N/A")
    echo "Alertmanager„Éê„Éº„Ç∏„Éß„É≥: $version"
    
    local alerts=$(curl -s http://localhost:9093/api/v1/alerts | jq '.data.alerts | length' 2>/dev/null || echo "0")
    echo "„Ç¢„ÇØ„ÉÜ„Ç£„Éñ„Ç¢„É©„Éº„ÉàÊï∞: $alerts"
    
    local silences=$(curl -s http://localhost:9093/api/v1/silences | jq '.data | length' 2>/dev/null || echo "0")
    echo "„Ç¢„ÇØ„ÉÜ„Ç£„Éñ„Çµ„Ç§„É¨„É≥„ÇπÊï∞: $silences"
    
    echo ""
    echo "=== „Ç¢„ÇØ„Çª„ÇπÊÉÖÂ†± ==="
    echo "Alertmanager UI: http://localhost:9093"
    echo "API „Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà: http://localhost:9093/api/v1"
    
    echo ""
    echo "=== ÈÄöÁü•Ë®≠ÂÆöÁ¢∫Ë™ç ==="
    
    # ÈÄöÁü•Ë®≠ÂÆö„ÅÆÁ¢∫Ë™ç
    local config=$(curl -s http://localhost:9093/api/v1/status/config | jq -r '.config' 2>/dev/null)
    if [[ -n "$config" ]]; then
        echo "Ë®≠ÂÆö„Éï„Ç°„Ç§„É´„ÅåÊ≠£Â∏∏„Å´Ë™≠„ÅøËæº„Åæ„Çå„Å¶„ÅÑ„Åæ„Åô"
    else
        echo "Ë®≠ÂÆö„Éï„Ç°„Ç§„É´„ÅÆË™≠„ÅøËæº„Åø„Å´ÂïèÈ°å„Åå„ÅÇ„Çä„Åæ„Åô"
    fi
}

# „É°„Ç§„É≥Âá¶ÁêÜ
main() {
    local start_time=$(date +%s)
    
    log_info "TeaFarmOps Alertmanager„Ç¢„É©„Éº„ÉàÁÆ°ÁêÜ„ÇíÈñãÂßã„Åó„Åæ„Åô..."
    
    # „É≠„Ç∞„ÅÆË®≠ÂÆö
    setup_logging
    
    # ÁÆ°ÁêÜËÄÖÊ®©Èôê„ÅÆÁ¢∫Ë™ç
    if [[ $EUID -ne 0 ]]; then
        log_error "„Åì„ÅÆ„Çπ„ÇØ„É™„Éó„Éà„ÅØÁÆ°ÁêÜËÄÖÊ®©Èôê„ÅßÂÆüË°å„Åô„ÇãÂøÖË¶Å„Åå„ÅÇ„Çä„Åæ„Åô"
        echo "sudo $0 [options] „Çí‰ΩøÁî®„Åó„Å¶„Åè„Å†„Åï„ÅÑ"
        exit 1
    fi
    
    # „Ç™„Éó„Ç∑„Éß„É≥„ÅÆÂá¶ÁêÜ
    if [[ "$INSTALL" == "true" ]]; then
        install_alertmanager
        create_systemd_service
    fi
    
    if [[ "$CONFIGURE" == "true" ]]; then
        configure_alertmanager
    fi
    
    if [[ "$NOTIFICATIONS" == "true" ]]; then
        configure_notifications
    fi
    
    if [[ "$START" == "true" ]]; then
        start_alertmanager
    fi
    
    if [[ "$TEST" == "true" ]]; then
        test_alerts
    fi
    
    if [[ "$MONITOR" == "true" ]]; then
        monitor_status
    fi
    
    # „Éá„Éï„Ç©„É´„ÉàÂãï‰ΩúÔºà„Ç™„Éó„Ç∑„Éß„É≥„ÅåÊåáÂÆö„Åï„Çå„Å¶„ÅÑ„Å™„ÅÑÂ†¥ÂêàÔºâ
    if [[ "$INSTALL" == "false" && "$CONFIGURE" == "false" && "$START" == "false" && "$TEST" == "false" && "$MONITOR" == "false" && "$NOTIFICATIONS" == "false" ]]; then
        log_info "„Éá„Éï„Ç©„É´„ÉàÂãï‰Ωú: ÂåÖÊã¨ÁöÑ„Çª„ÉÉ„Éà„Ç¢„ÉÉ„Éó„ÇíÂÆüË°å"
        install_alertmanager
        create_systemd_service
        configure_alertmanager
        configure_notifications
        start_alertmanager
        test_alerts
        monitor_status
    fi
    
    # ÂÆå‰∫ÜÈÄöÁü•
    local end_time=$(date +%s)
    local duration=$((end_time - start_time))
    
    log_success "Alertmanager„Ç¢„É©„Éº„ÉàÁÆ°ÁêÜ„ÅåÂÆå‰∫Ü„Åó„Åæ„Åó„ÅüÔºàÂÆüË°åÊôÇÈñì: ${duration}ÁßíÔºâ"
    log_info "Alertmanager UI: http://localhost:9093"
    log_info "„É≠„Ç∞„Éï„Ç°„Ç§„É´: $LOG_FILE"
}

# „Çπ„ÇØ„É™„Éó„ÉàÂÆüË°å
main "$@" 